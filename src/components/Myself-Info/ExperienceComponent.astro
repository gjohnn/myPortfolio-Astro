---
import experiences from "../../data/experiences";
---

<section class="max-w-5xl mx-auto py-16 px-4 sm:px-6 lg:px-8">
  <h2
    class="text-4xl sm:text-5xl font-bold text-center mb-20 bg-gradient-to-r from-red-900 to-red-400 bg-clip-text text-transparent tracking-tight"
  >
    My Career Journey
  </h2>

  <div class="relative" client:load>
    <div
      class="absolute left-4 sm:left-8 h-full w-1 bg-gradient-to-b from-indigo-500/30 to-cyan-500/30 -z-10"
    >
    </div>

    <div class="space-y-16">
      {
        experiences.map((exp, index) => (
          <article
            class="relative group opacity-0 translate-y-4 animate-fadeInUp"
            style={{ animationDelay: `${index * 100}ms` }}
          >
            <div class="absolute left-0 sm:left-4 h-5 w-5 rounded-full bg-gradient-to-r from-indigo-400 to-cyan-400 border-4 border-gray-900 -translate-x-1/2" />

            <div class="ml-10 sm:ml-16">
              <div class="bg-gray-900/80 backdrop-blur-md rounded-2xl p-6 sm:p-8 shadow-2xl border border-gray-800 hover:border-cyan-400/30 transition-all duration-500 group-hover:scale-[1.015]">
                <header class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-4">
                  <div>
                    <h3 class="text-2xl font-semibold text-indigo-300 leading-snug">
                      {exp.company}
                      {exp.project && (
                        <span class="block sm:inline text-lg text-cyan-200 font-normal ml-1">
                          ({exp.project})
                        </span>
                      )}
                    </h3>
                    <p class="text-lg font-medium text-cyan-200 mt-1">
                      {exp.role}
                    </p>
                  </div>
                  <p class="text-sm text-gray-400 bg-gray-800/50 px-3 py-1 rounded-full whitespace-nowrap">
                    {exp.period}
                  </p>
                </header>

                <div class="mb-6 flex flex-wrap gap-2">
                  {exp.technologies.map((tech) => (
                    <span class="px-3 py-1 bg-indigo-800/40 text-indigo-100 rounded-full text-sm font-medium hover:bg-indigo-700/60 transition-colors">
                      {tech}
                    </span>
                  ))}
                </div>

                <div class="space-y-3">
                  <button
                    class="text-cyan-400 text-sm font-medium flex items-center mt-2 hover:text-cyan-300 transition-colors cursor-pointer"
                    data-toggle-resp={`resp-${index}`}
                  >
                    Show Responsibilities
                    <svg
                      class="ml-1 w-4 h-4"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="2"
                        d="M19 9l-7 7-7-7"
                      />
                    </svg>
                  </button>

                  <div id={`resp-${index}`} class="space-y-2 hidden">
                    {exp.responsibilities.map((resp) => (
                      <p class="flex items-start text-gray-300 text-sm sm:text-base">
                        <span class="text-indigo-400 mr-2 mt-1">â–¹</span>
                        {resp}
                      </p>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </article>
        ))
      }
    </div>
  </div>
</section>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(12px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.6s ease-out forwards;
  }
</style>

<script>
  if (typeof window !== "undefined") {
    window.addEventListener("DOMContentLoaded", () => {
      const toggles = document.querySelectorAll("[data-toggle-resp]");
      toggles.forEach((btn) => {
        btn.addEventListener("click", () => {
          const id = btn.getAttribute("data-toggle-resp");
          const el = document.getElementById(id);
          if (el) {
            el.classList.toggle("hidden");
          }
        });
      });
    });
  }
</script>
