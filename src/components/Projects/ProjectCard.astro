---
interface Props {
  title: string;
  description: string;
  icon: string;
  iconColor: string;
  technologies: Array<{ name: string; color: string }>;
  githubUrl?: string;
  features?: string[];
}

const { title, description, icon, iconColor, technologies, githubUrl, features } = Astro.props;
---

<article class="card p-4 sm:p-6 hover:shadow-xl transition-all duration-300 group">
  <!-- Header -->
  <div class="flex items-start gap-4 mb-4">
    <div class={`w-12 h-12 ${iconColor} rounded-lg flex items-center justify-center flex-shrink-0`}>
      <i class={`${icon} text-white text-xl`}></i>
    </div>
    <div class="flex-1 min-w-0">
      <h3 class="text-lg sm:text-xl font-bold text-white mb-1">{title}</h3>
      <p class="text-sm text-gray-400 leading-relaxed">{description}</p>
    </div>
  </div>

  <!-- Technologies -->
  <div class="flex flex-wrap gap-2 mb-4">
    {technologies.map(tech => (
      <span class={`px-2 py-1 ${tech.color} rounded text-xs font-medium`}>
        {tech.name}
      </span>
    ))}
  </div>

  <!-- Features (optional) -->
  {features && features.length > 0 && (
    <div class="mb-4 space-y-1">
      {features.map(feature => (
        <div class="flex items-center gap-2 text-sm text-gray-300">
          <i class="fas fa-check text-green-400 text-xs"></i>
          <span>{feature}</span>
        </div>
      ))}
    </div>
  )}

  <!-- Action -->
  {githubUrl ? (
    <a
      href={githubUrl}
      target="_blank"
      rel="noopener noreferrer"
      class="btn btn-primary w-full justify-center text-sm"
    >
      <i class="fab fa-github mr-2"></i>
      View on GitHub
    </a>
  ) : (
    <div class="text-center py-2 text-gray-500 text-sm italic">
      Private Project
    </div>
  )}
</article>
